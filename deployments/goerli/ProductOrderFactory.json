{
  "address": "0xAc04165956adc99e72211eb36A9eD5e05D907933",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "PO",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfMoney",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "acceptTimeStamp",
          "type": "uint256"
        }
      ],
      "name": "POCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vendorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "PONo",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeToAccept",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeToShip",
          "type": "uint256"
        }
      ],
      "name": "createProductOrder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc1edf9d785f8a8a6ead5c9ee83562e9fc1bbe9d013a678974ffed4e10bdc868c",
  "receipt": {
    "to": null,
    "from": "0x1D333496F972CB9558914d6F5321734C2063076b",
    "contractAddress": "0xAc04165956adc99e72211eb36A9eD5e05D907933",
    "transactionIndex": 74,
    "gasUsed": "1668475",
    "logsBloom": "0x
    "blockHash": "0xb66c86b8a3d5f2f6c6dcacf959b6058622227dfe32408774100555e0d742aa9b",
    "transactionHash": "0xc1edf9d785f8a8a6ead5c9ee83562e9fc1bbe9d013a678974ffed4e10bdc868c",
    "logs": [],
    "blockNumber": 7899059,
    "cumulativeGasUsed": "16639853",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 12,
  "solcInputHash": "bad0d0ef3091a66a87531c7621d131e0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"PO\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfMoney\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptTimeStamp\",\"type\":\"uint256\"}],\"name\":\"POCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vendorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"PONo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeToAccept\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeToShip\",\"type\":\"uint256\"}],\"name\":\"createProductOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProductOrderFactory.sol\":\"ProductOrderFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"contracts/ProductOrder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\nerror ProductOrder__NotPurchaser();\\r\\nerror ProductOrder__NotVendor();\\r\\n\\r\\n\\r\\ncontract ProductOrder is KeeperCompatibleInterface {\\r\\n    // State of Order\\r\\n    enum POState {\\r\\n\\t    SENT,\\r\\n\\t    CANCELLED,\\r\\n\\t    ACCEPTED,\\r\\n\\t    DISPUTE,\\r\\n        END,\\r\\n        DISPUTE_END\\r\\n    }\\r\\n    POState private s_state;\\r\\n    \\r\\n    // All addresses\\r\\n    address private immutable i_purchaserAddress;\\r\\n    address private immutable i_vendorAddress;\\r\\n\\r\\n    // Amount of Money currently in contract\\r\\n    uint256 private s_amountOfMoney;\\r\\n\\r\\n    // Identifier to know what purchase order it is.\\r\\n    uint256 private immutable i_PONo;\\r\\n\\r\\n    // Timing to accept and shipping\\r\\n    uint256 private immutable i_timeToAccept;\\r\\n    uint256 private immutable i_acceptTimeStamp;\\r\\n    uint256 private immutable i_timeToShip;\\r\\n    uint256 private s_shippingTimeStamp;\\r\\n\\r\\n    // Dispute Variables\\r\\n    int256 private s_tokenWorthGot = -1;\\r\\n    int256 private s_tokenWorthShipped = -2;\\r\\n\\r\\n    // Events??\\r\\n\\r\\n    // Modifiers\\r\\n    modifier onlyPurchaser() {\\r\\n        if (msg.sender != i_purchaserAddress) revert ProductOrder__NotPurchaser();\\r\\n        _;\\r\\n    }\\r\\n    modifier onlyVendor() {\\r\\n        if (msg.sender != i_vendorAddress) revert ProductOrder__NotVendor();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address purchaserAddress, address vendorAddress, uint256 PONo, uint256 amountOfMoney, uint256 timeToAccept, uint256 acceptTimeStamp, uint256 timeToShip) {\\r\\n        i_purchaserAddress = purchaserAddress;\\r\\n        i_vendorAddress = vendorAddress;\\r\\n        i_PONo = PONo;\\r\\n        s_amountOfMoney = amountOfMoney;\\r\\n        i_timeToAccept = timeToAccept;\\r\\n        i_acceptTimeStamp = acceptTimeStamp;\\r\\n        i_timeToShip = timeToShip;\\r\\n        \\r\\n        s_state = POState.SENT;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    fallback() external payable {}\\r\\n\\r\\n    function cancelOrder() public onlyPurchaser {\\r\\n        require(s_state == POState.SENT);\\r\\n\\r\\n        payable(i_purchaserAddress).transfer(s_amountOfMoney);\\r\\n        s_amountOfMoney = 0;\\r\\n\\r\\n        s_state = POState.CANCELLED;\\r\\n    }\\r\\n\\r\\n    function recievePurchaseOrder(bool orderAccepted, uint256 amountOfPOAccepted) public onlyVendor {\\r\\n        require(s_state == POState.SENT);\\r\\n        require(amountOfPOAccepted <= s_amountOfMoney);\\r\\n\\r\\n        if (!orderAccepted) {\\r\\n            s_state = POState.CANCELLED;\\r\\n            payable(i_purchaserAddress).transfer(s_amountOfMoney);\\r\\n            s_amountOfMoney = 0;\\r\\n        }\\r\\n        else {\\r\\n            s_state = POState.ACCEPTED;\\r\\n            s_shippingTimeStamp = block.timestamp;\\r\\n            payable(i_purchaserAddress).transfer(s_amountOfMoney - amountOfPOAccepted);\\r\\n            s_amountOfMoney = amountOfPOAccepted;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setShipmentValue(uint256 shipmentValue) public onlyPurchaser {\\r\\n        require(s_state == POState.ACCEPTED);\\r\\n        require(shipmentValue <= s_amountOfMoney);\\r\\n        require(shipmentValue >= 0);\\r\\n\\r\\n        if (shipmentValue == s_amountOfMoney) {\\r\\n            s_state = POState.END;\\r\\n            payable(i_vendorAddress).transfer(s_amountOfMoney);\\r\\n            s_amountOfMoney = 0;\\r\\n        }\\r\\n        else {\\r\\n            s_state = POState.DISPUTE;\\r\\n            s_tokenWorthGot = int256(shipmentValue);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setPurchaserDispute(int256 tokenWorthGot) public onlyPurchaser {\\r\\n        require(s_state == POState.DISPUTE);\\r\\n        require(tokenWorthGot <= int256(s_amountOfMoney));\\r\\n        require(tokenWorthGot >= 0);\\r\\n        s_tokenWorthGot = tokenWorthGot;\\r\\n    }\\r\\n\\r\\n    function setVendorDispute(int256 tokenWorthShipped) public onlyVendor {\\r\\n        require(s_state == POState.DISPUTE);\\r\\n        require(tokenWorthShipped <= int256(s_amountOfMoney));\\r\\n        require(tokenWorthShipped >= 0);\\r\\n        s_tokenWorthShipped = tokenWorthShipped;\\r\\n    }\\r\\n\\r\\n    function checkUpkeep(bytes memory) public view override returns (bool upkeepNeeded, bytes memory) {\\r\\n        if (s_state == POState.SENT) {\\r\\n            upkeepNeeded = (block.timestamp - i_acceptTimeStamp) > i_timeToAccept;\\r\\n        } else if (s_state == POState.ACCEPTED) {\\r\\n            upkeepNeeded = ((block.timestamp - s_shippingTimeStamp) > i_timeToShip) && s_tokenWorthGot == -1;\\r\\n        } else if (s_state == POState.DISPUTE) {\\r\\n            upkeepNeeded = s_tokenWorthGot == s_tokenWorthShipped;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function performUpkeep(bytes calldata) external override {\\r\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n        require(upkeepNeeded);\\r\\n\\r\\n        if (s_state == POState.SENT || s_state == POState.ACCEPTED) {\\r\\n            s_state = POState.CANCELLED;\\r\\n            payable(i_purchaserAddress).transfer(s_amountOfMoney);\\r\\n            s_amountOfMoney = 0;\\r\\n        } else if (s_state == POState.DISPUTE) {\\r\\n            s_state == POState.DISPUTE_END;\\r\\n            payable(i_purchaserAddress).transfer(s_amountOfMoney - uint256(s_tokenWorthShipped));\\r\\n            payable(i_vendorAddress).transfer(uint256(s_tokenWorthShipped));\\r\\n            s_amountOfMoney = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getState() public view returns(POState) {\\r\\n        return s_state;\\r\\n    }\\r\\n\\r\\n    function getPurchaserAddress() public view returns(address) {\\r\\n        return i_purchaserAddress;\\r\\n    }\\r\\n\\r\\n    function getVendorAddress() public view returns(address) {\\r\\n        return i_vendorAddress;\\r\\n    }\\r\\n\\r\\n    function getAmountOfMoney() public view returns(uint256) {\\r\\n        return s_amountOfMoney;\\r\\n    }\\r\\n\\r\\n    function getPONo() public view returns(uint256) {\\r\\n        return i_PONo;\\r\\n    }\\r\\n\\r\\n    function getTimeToAccept() public view returns(uint256) {\\r\\n        return i_timeToAccept;\\r\\n    }\\r\\n\\r\\n    function getAcceptTimeStamp() public view returns(uint256) {\\r\\n        return i_acceptTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getTimeToShip() public view returns(uint256) {\\r\\n        return i_timeToShip;\\r\\n    }\\r\\n\\r\\n    function getShippingTimeStamp() public view returns(uint256) {\\r\\n        return s_shippingTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getTokenWorthGot() public view returns(int256) {\\r\\n        return s_tokenWorthGot;\\r\\n    }\\r\\n\\r\\n    function getTokenWorthShipped() public view returns(int256) {\\r\\n        return s_tokenWorthShipped;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x55085a3f7ca4344999ee939d49fc888cf3332b9e92820fbb3cc749bfe0940865\",\"license\":\"MIT\"},\"contracts/ProductOrderFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"./ProductOrder.sol\\\";\\r\\n\\r\\ncontract ProductOrderFactory {\\r\\n    event POCreated(address PO, address purchaser, uint256 amountOfMoney, uint256 acceptTimeStamp);\\r\\n\\r\\n    function createProductOrder(address vendorAddress, uint256 PONo, uint256 timeToAccept, uint256 timeToShip) public payable {\\r\\n        address purchaser = msg.sender;\\r\\n        uint256 amountOfMoney = msg.value;\\r\\n        uint256 acceptTimeStamp = block.timestamp;\\r\\n\\r\\n        ProductOrder productOrder = new ProductOrder(purchaser, vendorAddress, PONo, amountOfMoney, timeToAccept, acceptTimeStamp, timeToShip);\\r\\n        address POAddress = address(productOrder);\\r\\n        \\r\\n        payable(POAddress).transfer(msg.value);\\r\\n\\r\\n        // Sets up Upkeep for new contract.\\r\\n        //     https://docs.chain.link/docs/chainlink-automation/automation-economics/\\r\\n        //     https://automation.chain.link/?_ga=2.66826409.62596235.1667583413-1479646050.1660059585\\r\\n\\r\\n        emit POCreated(POAddress, purchaser, amountOfMoney, acceptTimeStamp);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf2f136ce3ab330e20138f05cc7306e574ee13626af0b9c2bfac7cb416df5e1e6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611d72806100206000396000f3fe60806040526004361061001e5760003560e01c806313673ffd14610023575b600080fd5b61003d600480360381019061003891906101cc565b61003f565b005b60003390506000349050600042905060008388888589868a60405161006390610126565b6100739796959493929190610251565b604051809103906000f08015801561008f573d6000803e3d6000fd5b50905060008190508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156100dd573d6000803e3d6000fd5b507ff35e28e780b04572fe0a14182086ce984c65115e7ae69b8b031b070ac70a3d858186868660405161011394939291906102c0565b60405180910390a1505050505050505050565b611a378061030683390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061016382610138565b9050919050565b61017381610158565b811461017e57600080fd5b50565b6000813590506101908161016a565b92915050565b6000819050919050565b6101a981610196565b81146101b457600080fd5b50565b6000813590506101c6816101a0565b92915050565b600080600080608085870312156101e6576101e5610133565b5b60006101f487828801610181565b9450506020610205878288016101b7565b9350506040610216878288016101b7565b9250506060610227878288016101b7565b91505092959194509250565b61023c81610158565b82525050565b61024b81610196565b82525050565b600060e082019050610266600083018a610233565b6102736020830189610233565b6102806040830188610242565b61028d6060830187610242565b61029a6080830186610242565b6102a760a0830185610242565b6102b460c0830184610242565b98975050505050505050565b60006080820190506102d56000830187610233565b6102e26020830186610233565b6102ef6040830185610242565b6102fc6060830184610242565b9594505050505056fe6101406040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6003557ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6004553480156200005a57600080fd5b5060405162001a3738038062001a378339818101604052810190620000809190620001f6565b8673ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508573ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508460c08181525050836001819055508260e0818152505081610100818152505080610120818152505060008060006101000a81548160ff021916908360058111156200013f576200013e620002a9565b5b021790555050505050505050620002d8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001838262000156565b9050919050565b620001958162000176565b8114620001a157600080fd5b50565b600081519050620001b5816200018a565b92915050565b6000819050919050565b620001d081620001bb565b8114620001dc57600080fd5b50565b600081519050620001f081620001c5565b92915050565b600080600080600080600060e0888a03121562000218576200021762000151565b5b6000620002288a828b01620001a4565b97505060206200023b8a828b01620001a4565b96505060406200024e8a828b01620001df565b9550506060620002618a828b01620001df565b9450506080620002748a828b01620001df565b93505060a0620002878a828b01620001df565b92505060c06200029a8a828b01620001df565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160601c60a05160601c60c05160e05161010051610120516116a062000397600039600081816104ff0152610a480152600081816109da0152610b210152600081816109b90152610c330152600061055b0152600081816107a301528181610b4701528181610c6301528181610f9f015261104c015260008181610413015281816106480152818161072d0152818161081b015281816108de01528181610af901528181610d6401528181610e0b0152610e8b01526116a06000f3fe60806040526004361061010d5760003560e01c80636e04ff0d11610095578063c509b44111610064578063c509b4411461033e578063dfe9d2b014610369578063e70a038514610394578063e92b2357146103bd578063ee5d9508146103e657610114565b80636e04ff0d146102815780638e20131b146102bf578063adf224ff146102ea578063bfad19e21461031557610114565b80633a2ef919116100dc5780633a2ef919146101c057806344839151146101eb57806344b32807146102165780634585e33b146102415780636a8165481461026a57610114565b80630d9f3dad14610116578063115bbf541461013f5780631865c57d1461016a57806327cff2e51461019557610114565b3661011457005b005b34801561012257600080fd5b5061013d600480360381019061013891906110ba565b610411565b005b34801561014b57600080fd5b506101546104fb565b6040516101619190611100565b60405180910390f35b34801561017657600080fd5b5061017f610523565b60405161018c9190611192565b60405180910390f35b3480156101a157600080fd5b506101aa610539565b6040516101b79190611100565b60405180910390f35b3480156101cc57600080fd5b506101d5610543565b6040516101e291906111bc565b60405180910390f35b3480156101f757600080fd5b5061020061054d565b60405161020d9190611100565b60405180910390f35b34801561022257600080fd5b5061022b610557565b6040516102389190611100565b60405180910390f35b34801561024d57600080fd5b506102686004803603810190610263919061123c565b61057f565b005b34801561027657600080fd5b5061027f610819565b005b34801561028d57600080fd5b506102a860048036038101906102a391906113ca565b610979565b6040516102b69291906114b6565b60405180910390f35b3480156102cb57600080fd5b506102d4610af5565b6040516102e19190611527565b60405180910390f35b3480156102f657600080fd5b506102ff610b1d565b60405161030c9190611100565b60405180910390f35b34801561032157600080fd5b5061033c600480360381019061033791906110ba565b610b45565b005b34801561034a57600080fd5b50610353610c2f565b6040516103609190611100565b60405180910390f35b34801561037557600080fd5b5061037e610c57565b60405161038b91906111bc565b60405180910390f35b3480156103a057600080fd5b506103bb60048036038101906103b6919061159a565b610c61565b005b3480156103c957600080fd5b506103e460048036038101906103df91906115da565b610e89565b005b3480156103f257600080fd5b506103fb611048565b6040516104089190611527565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610496576040517ffbe11d2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360058111156104aa576104a961111b565b5b60008054906101000a900460ff1660058111156104ca576104c961111b565b5b146104d457600080fd5b6001548113156104e357600080fd5b60008112156104f157600080fd5b8060038190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900460ff16905090565b6000600154905090565b6000600354905090565b6000600254905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600061059960405180602001604052806000815250610979565b509050806105a657600080fd5b600060058111156105ba576105b961111b565b5b60008054906101000a900460ff1660058111156105da576105d961111b565b5b14806106175750600260058111156105f5576105f461111b565b5b60008054906101000a900460ff1660058111156106155761061461111b565b5b145b156106bc5760016000806101000a81548160ff021916908360058111156106415761064061111b565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050501580156106ae573d6000803e3d6000fd5b506000600181905550610814565b600360058111156106d0576106cf61111b565b5b60008054906101000a900460ff1660058111156106f0576106ef61111b565b5b1415610813576005808111156107095761070861111b565b5b60008054906101000a900460ff1660058111156107295761072861111b565b5b50507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6004546001546107759190611636565b9081150290604051600060405180830381858888f193505050501580156107a0573d6000803e3d6000fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610809573d6000803e3d6000fd5b5060006001819055505b5b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461089e576040517ffbe11d2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060058111156108b2576108b161111b565b5b60008054906101000a900460ff1660058111156108d2576108d161111b565b5b146108dc57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610944573d6000803e3d6000fd5b50600060018190555060016000806101000a81548160ff021916908360058111156109725761097161111b565b5b0217905550565b60006060600060058111156109915761099061111b565b5b60008054906101000a900460ff1660058111156109b1576109b061111b565b5b1415610a0c577f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000042610a049190611636565b119150610af0565b60026005811115610a2057610a1f61111b565b5b60008054906101000a900460ff166005811115610a4057610a3f61111b565b5b1415610aaa577f000000000000000000000000000000000000000000000000000000000000000060025442610a759190611636565b118015610aa357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600354145b9150610aef565b60036005811115610abe57610abd61111b565b5b60008054906101000a900460ff166005811115610ade57610add61111b565b5b1415610aee576004546003541491505b5b5b915091565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bca576040517fee15884300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036005811115610bde57610bdd61111b565b5b60008054906101000a900460ff166005811115610bfe57610bfd61111b565b5b14610c0857600080fd5b600154811315610c1757600080fd5b6000811215610c2557600080fd5b8060048190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600454905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ce6576040517fee15884300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005811115610cfa57610cf961111b565b5b60008054906101000a900460ff166005811115610d1a57610d1961111b565b5b14610d2457600080fd5b600154811115610d3357600080fd5b81610dd85760016000806101000a81548160ff02191690836005811115610d5d57610d5c61111b565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610dca573d6000803e3d6000fd5b506000600181905550610e85565b60026000806101000a81548160ff02191690836005811115610dfd57610dfc61111b565b5b0217905550426002819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc82600154610e519190611636565b9081150290604051600060405180830381858888f19350505050158015610e7c573d6000803e3d6000fd5b50806001819055505b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0e576040517ffbe11d2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026005811115610f2257610f2161111b565b5b60008054906101000a900460ff166005811115610f4257610f4161111b565b5b14610f4c57600080fd5b600154811115610f5b57600080fd5b6000811015610f6957600080fd5b6001548114156110135760046000806101000a81548160ff02191690836005811115610f9857610f9761111b565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015611005573d6000803e3d6000fd5b506000600181905550611045565b60036000806101000a81548160ff021916908360058111156110385761103761111b565b5b0217905550806003819055505b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61109781611084565b81146110a257600080fd5b50565b6000813590506110b48161108e565b92915050565b6000602082840312156110d0576110cf61107a565b5b60006110de848285016110a5565b91505092915050565b6000819050919050565b6110fa816110e7565b82525050565b600060208201905061111560008301846110f1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061115b5761115a61111b565b5b50565b600081905061116c8261114a565b919050565b600061117c8261115e565b9050919050565b61118c81611171565b82525050565b60006020820190506111a76000830184611183565b92915050565b6111b681611084565b82525050565b60006020820190506111d160008301846111ad565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126111fc576111fb6111d7565b5b8235905067ffffffffffffffff811115611219576112186111dc565b5b602083019150836001820283011115611235576112346111e1565b5b9250929050565b600080602083850312156112535761125261107a565b5b600083013567ffffffffffffffff8111156112715761127061107f565b5b61127d858286016111e6565b92509250509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112d78261128e565b810181811067ffffffffffffffff821117156112f6576112f561129f565b5b80604052505050565b6000611309611070565b905061131582826112ce565b919050565b600067ffffffffffffffff8211156113355761133461129f565b5b61133e8261128e565b9050602081019050919050565b82818337600083830152505050565b600061136d6113688461131a565b6112ff565b90508281526020810184848401111561138957611388611289565b5b61139484828561134b565b509392505050565b600082601f8301126113b1576113b06111d7565b5b81356113c184826020860161135a565b91505092915050565b6000602082840312156113e0576113df61107a565b5b600082013567ffffffffffffffff8111156113fe576113fd61107f565b5b61140a8482850161139c565b91505092915050565b60008115159050919050565b61142881611413565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146857808201518184015260208101905061144d565b83811115611477576000848401525b50505050565b60006114888261142e565b6114928185611439565b93506114a281856020860161144a565b6114ab8161128e565b840191505092915050565b60006040820190506114cb600083018561141f565b81810360208301526114dd818461147d565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611511826114e6565b9050919050565b61152181611506565b82525050565b600060208201905061153c6000830184611518565b92915050565b61154b81611413565b811461155657600080fd5b50565b60008135905061156881611542565b92915050565b611577816110e7565b811461158257600080fd5b50565b6000813590506115948161156e565b92915050565b600080604083850312156115b1576115b061107a565b5b60006115bf85828601611559565b92505060206115d085828601611585565b9150509250929050565b6000602082840312156115f0576115ef61107a565b5b60006115fe84828501611585565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611641826110e7565b915061164c836110e7565b92508282101561165f5761165e611607565b5b82820390509291505056fea264697066735822122041fce653aea7118af5eca699fb4a57212aa07e0c08ac97a85a772e15fbb0a2f964736f6c63430008080033a264697066735822122036cbd1b761c93bd288073a7a07c155e90c29201ffbf56afd54f6a58bf05efa6164736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061001e5760003560e01c806313673ffd14610023575b600080fd5b61003d600480360381019061003891906101cc565b61003f565b005b60003390506000349050600042905060008388888589868a60405161006390610126565b6100739796959493929190610251565b604051809103906000f08015801561008f573d6000803e3d6000fd5b50905060008190508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156100dd573d6000803e3d6000fd5b507ff35e28e780b04572fe0a14182086ce984c65115e7ae69b8b031b070ac70a3d858186868660405161011394939291906102c0565b60405180910390a1505050505050505050565b611a378061030683390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061016382610138565b9050919050565b61017381610158565b811461017e57600080fd5b50565b6000813590506101908161016a565b92915050565b6000819050919050565b6101a981610196565b81146101b457600080fd5b50565b6000813590506101c6816101a0565b92915050565b600080600080608085870312156101e6576101e5610133565b5b60006101f487828801610181565b9450506020610205878288016101b7565b9350506040610216878288016101b7565b9250506060610227878288016101b7565b91505092959194509250565b61023c81610158565b82525050565b61024b81610196565b82525050565b600060e082019050610266600083018a610233565b6102736020830189610233565b6102806040830188610242565b61028d6060830187610242565b61029a6080830186610242565b6102a760a0830185610242565b6102b460c0830184610242565b98975050505050505050565b60006080820190506102d56000830187610233565b6102e26020830186610233565b6102ef6040830185610242565b6102fc6060830184610242565b9594505050505056fe6101406040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6003557ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6004553480156200005a57600080fd5b5060405162001a3738038062001a378339818101604052810190620000809190620001f6565b8673ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508573ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508460c08181525050836001819055508260e0818152505081610100818152505080610120818152505060008060006101000a81548160ff021916908360058111156200013f576200013e620002a9565b5b021790555050505050505050620002d8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001838262000156565b9050919050565b620001958162000176565b8114620001a157600080fd5b50565b600081519050620001b5816200018a565b92915050565b6000819050919050565b620001d081620001bb565b8114620001dc57600080fd5b50565b600081519050620001f081620001c5565b92915050565b600080600080600080600060e0888a03121562000218576200021762000151565b5b6000620002288a828b01620001a4565b97505060206200023b8a828b01620001a4565b96505060406200024e8a828b01620001df565b9550506060620002618a828b01620001df565b9450506080620002748a828b01620001df565b93505060a0620002878a828b01620001df565b92505060c06200029a8a828b01620001df565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160601c60a05160601c60c05160e05161010051610120516116a062000397600039600081816104ff0152610a480152600081816109da0152610b210152600081816109b90152610c330152600061055b0152600081816107a301528181610b4701528181610c6301528181610f9f015261104c015260008181610413015281816106480152818161072d0152818161081b015281816108de01528181610af901528181610d6401528181610e0b0152610e8b01526116a06000f3fe60806040526004361061010d5760003560e01c80636e04ff0d11610095578063c509b44111610064578063c509b4411461033e578063dfe9d2b014610369578063e70a038514610394578063e92b2357146103bd578063ee5d9508146103e657610114565b80636e04ff0d146102815780638e20131b146102bf578063adf224ff146102ea578063bfad19e21461031557610114565b80633a2ef919116100dc5780633a2ef919146101c057806344839151146101eb57806344b32807146102165780634585e33b146102415780636a8165481461026a57610114565b80630d9f3dad14610116578063115bbf541461013f5780631865c57d1461016a57806327cff2e51461019557610114565b3661011457005b005b34801561012257600080fd5b5061013d600480360381019061013891906110ba565b610411565b005b34801561014b57600080fd5b506101546104fb565b6040516101619190611100565b60405180910390f35b34801561017657600080fd5b5061017f610523565b60405161018c9190611192565b60405180910390f35b3480156101a157600080fd5b506101aa610539565b6040516101b79190611100565b60405180910390f35b3480156101cc57600080fd5b506101d5610543565b6040516101e291906111bc565b60405180910390f35b3480156101f757600080fd5b5061020061054d565b60405161020d9190611100565b60405180910390f35b34801561022257600080fd5b5061022b610557565b6040516102389190611100565b60405180910390f35b34801561024d57600080fd5b506102686004803603810190610263919061123c565b61057f565b005b34801561027657600080fd5b5061027f610819565b005b34801561028d57600080fd5b506102a860048036038101906102a391906113ca565b610979565b6040516102b69291906114b6565b60405180910390f35b3480156102cb57600080fd5b506102d4610af5565b6040516102e19190611527565b60405180910390f35b3480156102f657600080fd5b506102ff610b1d565b60405161030c9190611100565b60405180910390f35b34801561032157600080fd5b5061033c600480360381019061033791906110ba565b610b45565b005b34801561034a57600080fd5b50610353610c2f565b6040516103609190611100565b60405180910390f35b34801561037557600080fd5b5061037e610c57565b60405161038b91906111bc565b60405180910390f35b3480156103a057600080fd5b506103bb60048036038101906103b6919061159a565b610c61565b005b3480156103c957600080fd5b506103e460048036038101906103df91906115da565b610e89565b005b3480156103f257600080fd5b506103fb611048565b6040516104089190611527565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610496576040517ffbe11d2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360058111156104aa576104a961111b565b5b60008054906101000a900460ff1660058111156104ca576104c961111b565b5b146104d457600080fd5b6001548113156104e357600080fd5b60008112156104f157600080fd5b8060038190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900460ff16905090565b6000600154905090565b6000600354905090565b6000600254905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600061059960405180602001604052806000815250610979565b509050806105a657600080fd5b600060058111156105ba576105b961111b565b5b60008054906101000a900460ff1660058111156105da576105d961111b565b5b14806106175750600260058111156105f5576105f461111b565b5b60008054906101000a900460ff1660058111156106155761061461111b565b5b145b156106bc5760016000806101000a81548160ff021916908360058111156106415761064061111b565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050501580156106ae573d6000803e3d6000fd5b506000600181905550610814565b600360058111156106d0576106cf61111b565b5b60008054906101000a900460ff1660058111156106f0576106ef61111b565b5b1415610813576005808111156107095761070861111b565b5b60008054906101000a900460ff1660058111156107295761072861111b565b5b50507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6004546001546107759190611636565b9081150290604051600060405180830381858888f193505050501580156107a0573d6000803e3d6000fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610809573d6000803e3d6000fd5b5060006001819055505b5b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461089e576040517ffbe11d2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060058111156108b2576108b161111b565b5b60008054906101000a900460ff1660058111156108d2576108d161111b565b5b146108dc57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610944573d6000803e3d6000fd5b50600060018190555060016000806101000a81548160ff021916908360058111156109725761097161111b565b5b0217905550565b60006060600060058111156109915761099061111b565b5b60008054906101000a900460ff1660058111156109b1576109b061111b565b5b1415610a0c577f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000042610a049190611636565b119150610af0565b60026005811115610a2057610a1f61111b565b5b60008054906101000a900460ff166005811115610a4057610a3f61111b565b5b1415610aaa577f000000000000000000000000000000000000000000000000000000000000000060025442610a759190611636565b118015610aa357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600354145b9150610aef565b60036005811115610abe57610abd61111b565b5b60008054906101000a900460ff166005811115610ade57610add61111b565b5b1415610aee576004546003541491505b5b5b915091565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bca576040517fee15884300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036005811115610bde57610bdd61111b565b5b60008054906101000a900460ff166005811115610bfe57610bfd61111b565b5b14610c0857600080fd5b600154811315610c1757600080fd5b6000811215610c2557600080fd5b8060048190555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600454905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ce6576040517fee15884300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005811115610cfa57610cf961111b565b5b60008054906101000a900460ff166005811115610d1a57610d1961111b565b5b14610d2457600080fd5b600154811115610d3357600080fd5b81610dd85760016000806101000a81548160ff02191690836005811115610d5d57610d5c61111b565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610dca573d6000803e3d6000fd5b506000600181905550610e85565b60026000806101000a81548160ff02191690836005811115610dfd57610dfc61111b565b5b0217905550426002819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc82600154610e519190611636565b9081150290604051600060405180830381858888f19350505050158015610e7c573d6000803e3d6000fd5b50806001819055505b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0e576040517ffbe11d2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026005811115610f2257610f2161111b565b5b60008054906101000a900460ff166005811115610f4257610f4161111b565b5b14610f4c57600080fd5b600154811115610f5b57600080fd5b6000811015610f6957600080fd5b6001548114156110135760046000806101000a81548160ff02191690836005811115610f9857610f9761111b565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015611005573d6000803e3d6000fd5b506000600181905550611045565b60036000806101000a81548160ff021916908360058111156110385761103761111b565b5b0217905550806003819055505b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61109781611084565b81146110a257600080fd5b50565b6000813590506110b48161108e565b92915050565b6000602082840312156110d0576110cf61107a565b5b60006110de848285016110a5565b91505092915050565b6000819050919050565b6110fa816110e7565b82525050565b600060208201905061111560008301846110f1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061115b5761115a61111b565b5b50565b600081905061116c8261114a565b919050565b600061117c8261115e565b9050919050565b61118c81611171565b82525050565b60006020820190506111a76000830184611183565b92915050565b6111b681611084565b82525050565b60006020820190506111d160008301846111ad565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126111fc576111fb6111d7565b5b8235905067ffffffffffffffff811115611219576112186111dc565b5b602083019150836001820283011115611235576112346111e1565b5b9250929050565b600080602083850312156112535761125261107a565b5b600083013567ffffffffffffffff8111156112715761127061107f565b5b61127d858286016111e6565b92509250509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112d78261128e565b810181811067ffffffffffffffff821117156112f6576112f561129f565b5b80604052505050565b6000611309611070565b905061131582826112ce565b919050565b600067ffffffffffffffff8211156113355761133461129f565b5b61133e8261128e565b9050602081019050919050565b82818337600083830152505050565b600061136d6113688461131a565b6112ff565b90508281526020810184848401111561138957611388611289565b5b61139484828561134b565b509392505050565b600082601f8301126113b1576113b06111d7565b5b81356113c184826020860161135a565b91505092915050565b6000602082840312156113e0576113df61107a565b5b600082013567ffffffffffffffff8111156113fe576113fd61107f565b5b61140a8482850161139c565b91505092915050565b60008115159050919050565b61142881611413565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146857808201518184015260208101905061144d565b83811115611477576000848401525b50505050565b60006114888261142e565b6114928185611439565b93506114a281856020860161144a565b6114ab8161128e565b840191505092915050565b60006040820190506114cb600083018561141f565b81810360208301526114dd818461147d565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611511826114e6565b9050919050565b61152181611506565b82525050565b600060208201905061153c6000830184611518565b92915050565b61154b81611413565b811461155657600080fd5b50565b60008135905061156881611542565b92915050565b611577816110e7565b811461158257600080fd5b50565b6000813590506115948161156e565b92915050565b600080604083850312156115b1576115b061107a565b5b60006115bf85828601611559565b92505060206115d085828601611585565b9150509250929050565b6000602082840312156115f0576115ef61107a565b5b60006115fe84828501611585565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611641826110e7565b915061164c836110e7565b92508282101561165f5761165e611607565b5b82820390509291505056fea264697066735822122041fce653aea7118af5eca699fb4a57212aa07e0c08ac97a85a772e15fbb0a2f964736f6c63430008080033a264697066735822122036cbd1b761c93bd288073a7a07c155e90c29201ffbf56afd54f6a58bf05efa6164736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}